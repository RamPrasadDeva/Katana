from Katana import NodegraphAPI

#can seek the information fro yaml or json generated by modeling
partList = ["body","r_hand","l_hand","r_leg","l_leg","head","eye"]

#create material per part
def mtl_pp():

    gsMTL = NodegraphAPI.CreateNode("GroupStack", NodegraphAPI.GetRootNode())
    
    gsMTL.setName("MTL_Stack")
    gsMTL.setChildNodeType('Material')

    mtlNodes = []
    
    for part in partList:
        mtlChild = gsMTL.buildChildNode()
        mtlChild.getParameter('name').setValue("MTL_"+part,0)
        mtlNodes.append(mtlChild)

    return mtlNodes

#assign material per part
def mtl_assign():

    mtlNodes = mtl_pp()

    gsMTLAssign = NodegraphAPI.CreateNode("GroupStack", NodegraphAPI.GetRootNode())
    
    gsMTLAssign.setName("MTL_Assign_Stack")
    gsMTLAssign.setChildNodeType('MaterialAssign')
    
    for i,part in enumerate(partList):
        mtlAssignChild = gsMTLAssign.buildChildNode()
        mtlAssignChild.setName("MTL_Assign_"+part,0)
        mtl = mtlNodes[i]
        mtlAssignChild.getParameter('args.materialAssign.value').setExpression("scenegraphLocationFromNode(getNode('"+mtl.getParameter('name').getValue(0)+"'))")


mtl_assign()